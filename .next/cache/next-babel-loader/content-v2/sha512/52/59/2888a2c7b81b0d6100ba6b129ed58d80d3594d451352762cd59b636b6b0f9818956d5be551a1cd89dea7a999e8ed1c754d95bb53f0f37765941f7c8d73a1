{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yathartharora/Blog/pages/newBlog.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport blog from '../Ethereum/blog';\nimport Layout from '../Components/Layout';\nimport { Form, Button, Input, Header, Icon, Image, Grid } from 'semantic-ui-react';\nimport ipfs from '../ipfs';\nimport web3 from '../Ethereum/web3';\nimport HeadText from '../Components/Heading';\n\nclass NewBlog extends Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"onsubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        console.log(accounts[0]);\n        await blog.methods.Upload(this.state.name, this.state.ipfsHash).send({\n          from: accounts[0],\n          gas: '1000000'\n        });\n      } catch (error) {}\n\n      this.setState({\n        loading: false\n      });\n    });\n\n    _defineProperty(this, \"bookSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        load: false\n      });\n    });\n\n    this.state = {\n      ipfsHash: '',\n      loading: false,\n      name: '',\n      buffer: null,\n      bookname: '',\n      author: '',\n      summary: ''\n    };\n    this.captureFile = this.captureFile.bind(this);\n    this.onsubmit = this.onsubmit.bind(this);\n    this.generate = this.generate.bind(this);\n    this.bookSubmit = this.bookSubmit.bind(this);\n  }\n\n  generate(event) {\n    event.preventDefault();\n    ipfs.files.add(this.state.buffer, (err, res) => {\n      if (err) {\n        console.log(err);\n        return;\n      }\n\n      this.setState({\n        ipfsHash: res[0].hash\n      });\n      console.log('ipfsHash: ', this.state.ipfsHash);\n    });\n    this.setState({\n      active: false\n    });\n  }\n\n  captureFile(event) {\n    event.preventDefault();\n    console.log('Capture File...');\n    const file = event.target.files[0];\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n\n    reader.onloadend = () => {\n      this.setState({\n        buffer: Buffer(reader.result)\n      });\n      console.log('buffer ', this.state.buffer);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(HeadText, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        column: 2,\n        padded: \"horizontally\",\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 6,\n          floated: \"left\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontWeight: \"bold\",\n              fontSize: 20\n            },\n            children: \"Upload Thread\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: this.onsubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \" Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                value: this.state.name,\n                onChange: event => this.setState({\n                  name: event.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Upload File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"file\",\n                onChange: this.captureFile\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              secondary: true,\n              loading: this.state.loading,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              primary: true,\n              onClick: this.generate,\n              children: \"Generate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 4,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontWeight: \"bold\",\n              fontSize: 20\n            },\n            children: \"Upload Book Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Book Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                value: this.state.bookname,\n                onChange: event => this.setState({\n                  bookname: event.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Author Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                value: this.state.author,\n                onChange: event => this.setState({\n                  author: event.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Summary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.TextArea, {\n              value: this.state.summary,\n              onChange: event => this.setState({\n                summary: event.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default NewBlog;","map":{"version":3,"sources":["/Users/yathartharora/Blog/pages/newBlog.js"],"names":["React","Component","blog","Layout","Form","Button","Input","Header","Icon","Image","Grid","ipfs","web3","HeadText","NewBlog","constructor","event","preventDefault","setState","loading","accounts","eth","getAccounts","console","log","methods","Upload","state","name","ipfsHash","send","from","gas","error","load","buffer","bookname","author","summary","captureFile","bind","onsubmit","generate","bookSubmit","files","add","err","res","hash","active","file","target","reader","window","FileReader","readAsArrayBuffer","onloadend","Buffer","result","render","fontWeight","fontSize","value"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport blog from '../Ethereum/blog';\nimport Layout from '../Components/Layout';\nimport {Form, Button, Input, Header, Icon, Image, Grid} from 'semantic-ui-react';\nimport ipfs from '../ipfs';\nimport web3 from '../Ethereum/web3';\nimport HeadText from '../Components/Heading';\n\nclass NewBlog extends Component{\n\n\n    constructor(){\n        super();\n        this.state={\n            ipfsHash: '',\n            loading: false,\n            name: '',\n            buffer: null,\n            bookname: '',\n            author: '',\n            summary: ''\n        }\n        this.captureFile = this.captureFile.bind(this);\n        this.onsubmit = this.onsubmit.bind(this);\n        this.generate = this.generate.bind(this);\n        this.bookSubmit = this.bookSubmit.bind(this);\n    }\n    \n\n    onsubmit = async(event) => {\n        event.preventDefault();\n        this.setState({loading: true});\n        try {\n            const accounts = await web3.eth.getAccounts();\n            console.log(accounts[0]);\n            await blog.methods.Upload(this.state.name,this.state.ipfsHash).send({\n                from: accounts[0],\n                gas: '1000000'\n            });\n        } catch (error) {\n            \n        }\n        this.setState({loading: false});\n    }\n\n\n    generate(event) {\n        event.preventDefault();\n        ipfs.files.add(this.state.buffer, (err, res) => {\n            if(err){\n                console.log(err)\n                return\n            }\n            this.setState({ipfsHash: res[0].hash})\n            console.log('ipfsHash: ', this.state.ipfsHash);\n        })\n        this.setState({active: false});\n    }\n\n    captureFile(event) {\n        event.preventDefault();\n        console.log('Capture File...')\n\n        const file = event.target.files[0];\n        const reader = new window.FileReader();\n        reader.readAsArrayBuffer(file);\n\n        reader.onloadend = () => {\n            this.setState({buffer: Buffer(reader.result)})\n            console.log('buffer ',this.state.buffer);\n        }\n    }\n\n    bookSubmit = async(event) => {\n        event.preventDefault();\n        this.setState({load: false})\n\n    }\n\n\n    render(){\n        return(\n            <Layout>\n\n                <HeadText />\n                <Grid column={2}  padded=\"horizontally\">\n                <Grid.Column width={6} floated=\"left\">\n                <p style={{fontWeight: \"bold\", fontSize: 20}}>Upload Thread</p>\n                <Form onSubmit={this.onsubmit}>\n                    <Form.Field>\n                        <label> Name</label>\n                        <Input \n                         value = {this.state.name}\n                         onChange = {event => this.setState({name: event.target.value})}\n                        />\n\n                        <label>Upload File</label>\n                        <Input \n                            type='file'\n                            onChange = {this.captureFile}\n                        />\n                    </Form.Field>\n                    <Button secondary loading={this.state.loading}>Submit</Button> \n                    <Button primary onClick={this.generate}>Generate</Button> \n                </Form>\n                </Grid.Column >\n                <Grid.Column width={4}>\n                    <p style={{fontWeight: \"bold\", fontSize: 20}}>Upload Book Details</p>\n                    <Form>\n                        <Form.Field>\n                        <label>Book Name</label>\n                        <Input\n                         value = {this.state.bookname}\n                         onChange= {event => this.setState({bookname: event.target.value})}\n                        />\n\n                        <label>Author Name</label>\n                        <Input\n                        value = {this.state.author}\n                        onChange = {event => this.setState({author: event.target.value})}\n                        />\n                        </Form.Field>\n                        <label>Summary</label>\n                        <Form.TextArea\n                         value={this.state.summary}\n                         onChange = {event => this.setState({summary: event.target.value})}\n                        />\n                        <Button>Submit</Button>\n                    </Form> \n\n                </Grid.Column>\n                </Grid>\n\n            </Layout>\n        )\n    }\n}\n\nexport default NewBlog;"]},"metadata":{},"sourceType":"module"}